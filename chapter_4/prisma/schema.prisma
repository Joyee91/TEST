// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This specifies the structure of the database

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// we need to create models to allow the js to interpret the sql query
model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  todos     Todo[]
}

model Todo {
  id        Int       @id @default(autoincrement())
  task      String
  completed Boolean   @default(false)
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
}

// Using ORM is also helpful with migration (version control)
// So when we create databases like in chapter_3, if we have to modify the structure of the database, it will be hard and older entries will have a different version than the new entries...so this will record all the modifications made to the database and when we run the migration, every instance of the database will update based on the latest version (even previous entries)